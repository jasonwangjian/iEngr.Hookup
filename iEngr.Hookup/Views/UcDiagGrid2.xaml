<UserControl x:Class="iEngr.Hookup.Views.UcDiagGrid2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:iEngr.Hookup.Views"
             xmlns:ex="clr-namespace:iEngr.Hookup.Models"
             xmlns:vm="clr-namespace:iEngr.Hookup.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <vm:DiagGrid2ViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <!-- 创建转换器 -->
        <local:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DataGrid x:Name="dgDiagNode" Margin="2,2,2,0" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="1" IsReadOnly="False" 
                  CanUserAddRows="False" AutoGenerateColumns="False" SelectionUnit="FullRow" HorizontalAlignment="Stretch"
                  HeadersVisibility="None"
                  BeginningEdit="DataGrid_BeginningEdit"
                  ItemsSource="{Binding NodeDiagramItems}" 
		          SelectedItem="{Binding NodeSelectedItem}"
                  VerticalAlignment="Bottom"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ex:ScrollSyncBehavior.SyncGroup="DiagramGroup"
                  ex:DataGridColumnSyncBehavior.SyncWith="{Binding ElementName=dgDiagLib}">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Resources>
                        <!-- 选中且有焦点时的颜色 -->
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Blue"/>-->
                        <!-- 选中但失去焦点时的颜色 -->
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightGray"/>
                    </Style.Resources>
                    <!--<Setter Property="IsEnabled" Value="{Binding IsOwned}" />-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsOwned}" Value="True">
                            <Setter Property="Background" Value="LightBlue"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInherit}" Value="True">
                            <Setter Property="FontStyle" Value="Italic"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <!--<MenuItem Header="清除排序" Click="ClearAllSorting_click"/>
                    <Separator/>
                    <MenuItem Header="分配图形" Command="{Binding PictureSetCommand}"                      
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    <Separator/>-->
                    <MenuItem Header="移除Diag" Command="{Binding DiagramRemoveCommand}"                      
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>

                </ContextMenu>
            </DataGrid.ContextMenu>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CellEditEnding">
                    <i:InvokeCommandAction 
                                Command="{Binding DataContext.CellEditEndingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Path=ID}"  IsReadOnly="True"/>
                <DataGridTextColumn Header="名称" Binding="{Binding Path=NameCn}"
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=NameEn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="描述" Binding="{Binding Path=DescCn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Path=DescEn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="备注" Binding="{Binding Path=RemarksCn}"  
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Remarks" Binding="{Binding Path=RemarksEn}"  
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter Grid.Row="2" Grid.Column="1" Height="2" HorizontalAlignment="Stretch"/>
        <DataGrid x:Name="dgDiagLib" Margin="2,0,2,2" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" IsReadOnly="False" 
                  CanUserAddRows="False" AutoGenerateColumns="False" SelectionUnit="FullRow" HorizontalAlignment="Stretch"
                  HeadersVisibility="Column"
                  BeginningEdit="DataGrid_BeginningEdit"
                  ItemsSource="{Binding LibDiagramItems}" 
		          SelectedItem="{Binding LibSelectedItem}"
                  ex:ScrollSyncBehavior.SyncGroup="DiagramGroup"
                  >
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightGray"/>
                    </Style.Resources>
                    <!--<Setter Property="IsEnabled" Value="{Binding IsOwned}" />-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsOwned}" Value="True">
                            <Setter Property="Background" Value="LightBlue"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="清除排序" Click="ClearAllSorting_click"/>
                    <Separator/>
                    <MenuItem Header="分配图形" Command="{Binding PictureSetCommand}"                      
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    <Separator/>
                    <MenuItem Header="添加Diag" Command="{Binding DiagramAddCommand}"                      
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>

                </ContextMenu>
            </DataGrid.ContextMenu>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CellEditEnding">
                    <i:InvokeCommandAction 
                                Command="{Binding DataContext.CellEditEndingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Path=ID}"  IsReadOnly="True"/>
                <DataGridTextColumn Header="名称" Binding="{Binding Path=NameCn}"
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=NameEn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="描述" Binding="{Binding Path=DescCn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Path=DescEn}" 
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="备注" Binding="{Binding Path=RemarksCn}"  
                                    local:Extensions.IsVisible="{Binding Data.LangInChinese, Source={StaticResource Proxy}}"/>
                <DataGridTextColumn Header="Remarks" Binding="{Binding Path=RemarksEn}"  
                                    local:Extensions.IsVisible="{Binding Data.LangInEnglish, Source={StaticResource Proxy}}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
