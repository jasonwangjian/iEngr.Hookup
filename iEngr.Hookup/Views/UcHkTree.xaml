<UserControl x:Class="iEngr.Hookup.Views.UcHkTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:iEngr.Hookup.Views"
             xmlns:cv="clr-namespace:iEngr.Hookup.Converters"
             xmlns:vm="clr-namespace:iEngr.Hookup.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <cv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <cv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <cv:PropertyKeyToNameConverter x:Key="PropertyKeyToNameConverter"/>
        <cv:CountryToIconResourceConverter x:Key="CountryToIconConverter"/>
        <cv:NegativeNumberToVisibilityConverter x:Key="NegativeNumberToVisibilityConverter"/>

        <BitmapImage x:Key="DefaultIcon" UriSource="/Resources/DefaultIcon.ico"/>

        <!-- 国家列表 -->
        <x:Array x:Key="Countries" Type="sys:String" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <sys:String>China</sys:String>
            <sys:String>USA</sys:String>
            <sys:String>Germany</sys:String>
            <sys:String>Japan</sys:String>
        </x:Array>

        <!-- 上下文菜单 -->
        <ContextMenu x:Key="TreeViewContextMenu">
            <!-- 展开折叠功能 -->
            <MenuItem Header="展开所有" 
                      Command="{Binding PlacementTarget.Tag.ExpandAllCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Ctrl+E"/>
            <MenuItem Header="折叠所有" 
                      Command="{Binding PlacementTarget.Tag.CollapseAllCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Ctrl+W"/>
            <Separator/>
            <!-- 移动功能 -->
            <MenuItem Header="上移" 
                      Command="{Binding PlacementTarget.Tag.MoveUpCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="下移" 
                      Command="{Binding PlacementTarget.Tag.MoveDownCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="移动到父节点" 
                      Command="{Binding PlacementTarget.Tag.MoveToParentCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="移动到子节点" 
                      Command="{Binding PlacementTarget.Tag.MoveToChildCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <Separator/>
            <!-- 复制剪切粘贴功能 -->
            <MenuItem Header="复制" 
                      Command="{Binding PlacementTarget.Tag.CopyCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Ctrl+C"/>
            <MenuItem Header="剪切" 
                      Command="{Binding PlacementTarget.Tag.CutCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Ctrl+X"/>
            <MenuItem Header="粘贴" 
                      Command="{Binding PlacementTarget.Tag.PasteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Ctrl+V"/>
            <MenuItem Header="删除" 
                      Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"
                      InputGestureText="Delete"/>
            <Separator/>
            <MenuItem Header="编辑属性" 
                      Command="{Binding PlacementTarget.Tag.EditPropertiesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="编辑" 
                      Command="{Binding PlacementTarget.Tag.StartEditCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding}"/>
            <Separator/>
        </ContextMenu>

        <!-- TreeViewItem样式 -->
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="ContextMenu" Value="{StaticResource TreeViewContextMenu}"/>
            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=TreeView}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <!-- 显示模板 -->
        <!-- 显示模板 -->
        <DataTemplate x:Key="DisplayTemplate">
            <StackPanel Orientation="Vertical" Margin="2">
                <!-- 节点名称和图标 -->
                <StackPanel Orientation="Horizontal">
                    <Image Width="16" Height="16" Margin="0,0,5,0"
                   Source="{Binding Country, Converter={StaticResource CountryToIconConverter}}"/>
                    <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                </StackPanel>
                <!-- 确保这里正确绑定了DisplayProperties -->
                <TextBlock Text="{Binding DisplayProperties}" 
                   Foreground="Gray" FontSize="10" FontStyle="Italic"
                   Margin="5,2,0,0"
                   TextWrapping="Wrap"/>
                <!-- 属性显示区域 -->
                <ItemsControl ItemsSource="{Binding SelectedPropertyKeys}" 
                      Margin="5,2,0,0"
                      Visibility="{Binding SelectedPropertyKeys.Count, Converter={StaticResource NullToVisibilityConverter}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0,1">
                                <TextBlock Text="{Binding Converter={StaticResource PropertyKeyToNameConverter}}" 
                                   Foreground="DarkGray" FontSize="10"/>
                                <TextBlock Text=": " Foreground="DarkGray" FontSize="10"/>
                                <TextBlock Text="{Binding Path=Properties[{0}], RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                   Foreground="Gray" FontSize="10" FontStyle="Italic"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>

        <!-- 编辑模板 -->
        <DataTemplate x:Key="EditTemplate">
            <StackPanel Orientation="Horizontal" Margin="2">
                <!-- 名称编辑 -->
                <TextBox Text="{Binding EditName, UpdateSourceTrigger=PropertyChanged}" 
                     Width="100" Margin="0,0,5,0"/>

                <!-- 国家编辑 -->
                <ComboBox SelectedItem="{Binding EditCountry, UpdateSourceTrigger=PropertyChanged}"
                      ItemsSource="{Binding Source={StaticResource Countries}}"
                      Width="80" Margin="0,0,5,0"/>

                <!-- 人口编辑 -->
                <TextBox Text="{Binding EditPopulation, UpdateSourceTrigger=PropertyChanged}"
                     Width="50" Margin="0,0,5,0"/>
                <TextBlock Text="人口不能为负数" Foreground="Red" FontSize="9"
                           Visibility="{Binding EditPopulation, Converter={StaticResource NegativeNumberToVisibilityConverter}}"/>
                <!-- 描述编辑 -->
                <TextBox Text="{Binding EditDescription, UpdateSourceTrigger=PropertyChanged}"
                     Width="150" Margin="0,0,5,0"/>

                <!-- 确认按钮 -->
                <Button Content="✓" Width="20" Height="20" Margin="2,0"
                        Command="{Binding DataContext.ConfirmEditCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                        CommandParameter="{Binding}"
                        ToolTip="确认修改"
                        Background ="White"
                        Foreground="Black"/>

                <!-- 取消按钮 -->
                <Button Content="✗" Width="20" Height="20" Margin="2,0"
                        Command="{Binding DataContext.CancelEditCommand, RelativeSource={RelativeSource AncestorType=TreeView}}"
                        CommandParameter="{Binding}"
                        ToolTip="取消编辑"
                        Background ="White"
                        Foreground="Black"/>
            </StackPanel>
        </DataTemplate>

        <!-- 属性编辑器模板 -->
        <DataTemplate x:Key="StringEditorTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
                 Width="150" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="IntegerEditorTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
                 Width="150" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="DoubleEditorTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
                 Width="150" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="BooleanEditorTemplate">
            <CheckBox IsChecked="{Binding Value}" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="EnumEditorTemplate">
            <ComboBox ItemsSource="{Binding Options}" 
                  SelectedItem="{Binding Value}" 
                  Width="150" Margin="2"/>
        </DataTemplate>

        <DataTemplate x:Key="DateTimeEditorTemplate">
            <DatePicker SelectedDate="{Binding Value}" 
                    Width="150" Margin="2"/>
        </DataTemplate>

        
        <!-- 主要的HierarchicalDataTemplate -->
        <HierarchicalDataTemplate DataType="{x:Type vm:HkTreeItem}" 
                              ItemsSource="{Binding Children}">
            <ContentPresenter x:Name="contentPresenter" Content="{Binding}">
                <ContentPresenter.Style>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="ContentTemplate" Value="{StaticResource DisplayTemplate}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </HierarchicalDataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="1" Grid.Column="1">
            <!-- 状态栏 -->
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation ="Horizontal" ></StackPanel>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <TextBlock Grid.Column="0" Margin="5,0">
                    <Run Text="选中: "/>
                    <Run Text="{Binding SelectedItem.Name, FallbackValue='无'}"/>
                    <Run Text=", 父节点: "/>
                    <Run Text="{Binding SelectedItem.Parent.Name, FallbackValue='根节点'}"/>
                </TextBlock>

                <TextBlock Grid.Column="1" Margin="5,0" HorizontalAlignment="Center">
                    <Run Text="剪贴板: "/>
                    <Run Text="{Binding ClipboardContent, Mode=OneWay, FallbackValue='空'}"/>
                    <Run Text="{Binding PasteStatusMessage}" Foreground="Red"/>
                </TextBlock>

                <TextBlock Grid.Column="2" Margin="5,0" HorizontalAlignment="Right">
                    <Run Text="右键菜单"/>
                </TextBlock>
            </StatusBar>

            <!-- TreeView -->
            <TreeView x:Name="twHk" ItemsSource="{Binding TreeItems}" 
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown"
                      KeyDown="TreeView_KeyDown">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </DockPanel>
    </Grid>
</UserControl>
